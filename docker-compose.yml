# MySQL database shared with tomcat containers.
version: '3'
services:
  db:
    image: mysql:latest
    deploy:
      replicas: 1
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: employeedb
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    volumes:
      - "./db:/docker-entrypoint-initdb.d"

# First node of the first Tomcat virtual host.
  tomcat_1_node_1:
    image: tomcat:latest
    deploy:
      replicas: 1
  # Environment variables do not appear to be getting loaded the first time Tomcat starts!
    environment:
      VIRTUAL_HOST: tomcat_1.mulligan.ie
      VIRTUAL_PORT: 8080
      JDBC_URL: jdbc:mysql://db:3306/employeedb?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
      JDBC_USER: root
      JDBC_PASS: password
    volumes:
     - "./tomcat/webapps:/usr/local/tomcat/webapps"
    depends_on:
     - db

# Second node of the first Tomcat virtual host.
  tomcat_1_node_2:
    image: tomcat:latest
    deploy:
      replicas: 1
    environment:
      VIRTUAL_HOST: tomcat_1.mulligan.ie
      VIRTUAL_PORT: 8080
      JDBC_URL: jdbc:mysql://db:3306/employeedb?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
      JDBC_USER: root
      JDBC_PASS: password
    volumes:
     - "./tomcat/webapps:/usr/local/tomcat/webapps"
    depends_on:
     - db

# First node of the second Tomcat virtual host.
  tomcat_2_node_1:
    image: tomcat:latest
    deploy:
      replicas: 1
    environment:
      VIRTUAL_HOST: tomcat_2.mulligan.ie
      VIRTUAL_PORT: 8080
      JDBC_URL: jdbc:mysql://db:3306/example_db?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
      JDBC_USER: example_db_user
      JDBC_PASS: example_db_pass
    volumes:
     - "./tomcat/webapps:/usr/local/tomcat/webapps"
    depends_on:
     - db

# nginx container that automatically creates a load balancer / reverse proxy across the 2 tomcat containers / 2 virtual hosts.
  nginx:
    image: jwilder/nginx-proxy:latest
    deploy:
      replicas: 2
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    depends_on:
      - tomcat_1_node_1
      - tomcat_1_node_2
      - tomcat_2_node_1
